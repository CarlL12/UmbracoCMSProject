@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@{

    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
      
    var sectionId = string.IsNullOrWhiteSpace(sectionTitle) 
    ? "default-id" 
    : sectionTitle.ToString().ToLower().Trim().Replace(" ", "-");
  
    var spacingTopClass = (Model!.Content.Value<bool>("addSpaceToTop")) ? "spacing-top" : "";
    var spacingBottomClass = (Model!.Content.Value<bool>("addSpaceToBottom")) ? "spacing-bottom" : "";
    var centerContentClass = (Model!.Content.Value<bool>("centerContentOnPage")) ? "center" : "";
    var centerTextClass = (Model!.Content.Value<bool>("centerTextOnPage")) ? "center-text" : "";
    var stackColumnClass = (Model!.Content.Value<bool>("stackContentColumn")) ? "flex-column" : "";
    var stackRowClass = (Model!.Content.Value<bool>("stackContentRow")) ? "flex-row" : "";
    var extraSpacingTopClass = (Model!.Content.Value<bool>("extraSpaceTop")) ? "extra-spacing-top" : "";
    var extraSpacingBottomClass = (Model!.Content.Value<bool>("extraSpaceBottom")) ? "extra-spacing-bottom" : "";
    var textOnTopOfImageClass = (Model!.Content.Value<bool>("textOnTopOfImage")) ? "text-on-top-image" : "";


    var sectionBackgroundColorLabel = Model?.Content?.Value<Umbraco.Cms.Core.PropertyEditors.ValueConverters.ColorPickerValueConverter.PickedColor>("sectionBackgroundColor")?.Label.ToLower() ?? null ; 
    var backgroundColorClass = (!string.IsNullOrEmpty(sectionBackgroundColorLabel) && sectionBackgroundColorLabel != "none") ? $"bg-{sectionBackgroundColorLabel}" : "";

    var sectionBackgroundImage = Model?.Content.Value<IPublishedContent>("sectionBackgroundImage")?.Url() ?? null;
}

<section id="@sectionId" class="@spacingTopClass @spacingBottomClass @backgroundColorClass @extraSpacingTopClass @extraSpacingBottomClass">


    <div class="container @centerContentClass @centerTextClass @stackRowClass @stackColumnClass">
        
      @if(!string.IsNullOrEmpty(sectionBackgroundImage))
      {
        <img class="background-image @textOnTopOfImageClass" src="@sectionBackgroundImage" alt="@sectionTitle background image">
      }

      @await Html.GetBlockGridItemAreasHtmlAsync(Model)  
        
     </div>   

 </section>